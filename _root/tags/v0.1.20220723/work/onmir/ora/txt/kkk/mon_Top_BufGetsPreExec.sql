SELECT DT, FIRST_LOAD_TIME,
       LAST_LOAD_TIME, LAST_ACTIVE_TIME
     , USERNAME
     , MODULE
     , SQL_ID
     , RN
     , RANK_CPU
     , RANK_IO
     , BUFGETSPEREXEC
     , EXECUTIONS
, "ETIME_SUM"
, "ETIME"
, "CPU_TIME"
, "ROWS"
, "GETS"
     , PARSE_CALLS
     , DISK_READS
     , BUFFER_GETS
     , ROWS_PROCESSED
     , SHARABLE_MEM
     , PERSISTENT_MEM
     , RUNTIME_MEM
     --, USERS_EXECUTING
     , SORTS
     --, LOADED_VERSIONS
     --, OPEN_VERSIONS
     --, USERS_OPENING
     --, LOADS
     --, INVALIDATIONS
     --, COMMAND_TYPE
     --, OPTIMIZER_MODE
     --, OPTIMIZER_COST
     --, PARSING_USER_ID
     , LEN
     , SQL_FULLTEXT
  FROM (
SELECT SYSDATE AS DT,
       SA.LAST_LOAD_TIME, SA.LAST_ACTIVE_TIME
     , U.USERNAME
     , RPAD( SA.MODULE, 20 ) MODULE
     , SA.SQL_ID
     , ROW_NUMBER() OVER ( ORDER BY ROUND(DECODE(SA.EXECUTIONS,NULL,0,0,0,(NVL(SA.BUFFER_GETS,0)/SA.EXECUTIONS)),1) desc ) AS RN
     , RANK() OVER ( ORDER BY SA.ELAPSED_TIME DESC ) RANK_CPU
     --, RANK() OVER ( ORDER BY SA.PHYSICAL_READ_REQUESTS DESC ) RANK_IO
     , RANK() OVER ( ORDER BY SA.DISK_READS DESC ) RANK_IO
     , ROUND(DECODE(SA.EXECUTIONS,NULL,0,0,0,(NVL(SA.BUFFER_GETS,0)/SA.EXECUTIONS)),1) BUFGETSPEREXEC
     , SA.EXECUTIONS
         , ROUND(SA.ELAPSED_TIME/1000000,3)                             ETIME_SUM   -- "ELAPSED_TIME(S)"
         , ROUND(SA.ELAPSED_TIME/EXECUTIONS/1000000,3)                  ETIME       -- "ELAP/EXEC(S)"
         , ROUND(SA.CPU_TIME/EXECUTIONS/1000000,3)                      CPU_TIME
         , ROUND(SA.ROWS_PROCESSED/SA.EXECUTIONS,0)                     "ROWS"
         , ROUND(SA.BUFFER_GETS/SA.EXECUTIONS,1)                        GETS        -- "GETS/EXEC"
/* 10g (X)
         , ROUND(SA.PHYSICAL_READ_REQUESTS/SA.EXECUTIONS,3)             PGETS       -- "P-GETS/EXEC"
         , CASE WHEN SA.PHYSICAL_READ_REQUESTS = 0
                THEN -1
                ELSE ROUND(SA.PHYSICAL_READ_BYTES/SA.PHYSICAL_READ_REQUESTS/1024,0)    
            END                                                         PGETS_KB    -- "P-GETS-B/EXEC"
         , CASE WHEN SA.BUFFER_GETS = 0
                THEN -1
                ELSE ROUND(SA.PHYSICAL_READ_REQUESTS*100/SA.BUFFER_GETS,6)
            END                                                         "MISS(%)"     
*/
     , SA.PARSE_CALLS
     , SA.DISK_READS
     , SA.BUFFER_GETS
     , SA.ROWS_PROCESSED
     , SA.SHARABLE_MEM
     , SA.PERSISTENT_MEM
     , SA.RUNTIME_MEM
     , SA.USERS_EXECUTING
     , SA.SORTS
     , SA.LOADED_VERSIONS
     , SA.OPEN_VERSIONS
     , SA.USERS_OPENING
     , SA.LOADS
     , SA.FIRST_LOAD_TIME
     , SA.INVALIDATIONS
     , SA.COMMAND_TYPE
     , SA.OPTIMIZER_MODE
     , SA.OPTIMIZER_COST
     , SA.PARSING_USER_ID
     , LENGTH( SA.SQL_FULLTEXT ) LEN
     , SA.SQL_FULLTEXT
  FROM V$SQLAREA SA
     , DBA_USERS U
 WHERE 1=1
   AND DECODE(SA.EXECUTIONS,NULL,0,0,0,(NVL(SA.BUFFER_GETS,0)/SA.EXECUTIONS)) > 10000
   AND SA.PARSING_USER_ID > 5
   AND SA.EXECUTIONS > 10
   AND SA.PARSING_USER_ID = U.USER_ID
   --AND ROWNUM = 0
 ORDER BY BUFGETSPEREXEC DESC
       )
 WHERE 1=1 
   -- AND USERNAME IN ( 'xx' )
   AND USERNAME IN ( SELECT USER FROM DUAL )
;
