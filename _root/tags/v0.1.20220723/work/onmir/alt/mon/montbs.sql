--set echo off
set feedback off
set timing off
set linesize 180
set pagesize 1000
set colsize 80

SELECT * FROM (
SELECT * FROM (
SELECT NAME     
     , MAX_SIZE as MAX_SZ     
     , CURR_SIZE CURR     
     , USED_SIZE USED

     --, (MAX_SIZE - USED_SIZE) AS FREE
     , (CURR_SIZE - USED_SIZE) AS FREE

     --, USAGE AS 'USAGE(%)'
     --, ROUND( USED_SIZE / MAX_SIZE * 100, 2 ) AS USAGE
     , TO_CHAR( ROUND( USED_SIZE / MAX_SIZE * 100, 2 ), '90.99') AS USAGE
FROM ( 
       -- VOL TBS
       SELECT T.ID
            , T.NAME
            , ROUND( M.MAX_SIZE/1024/1024/1024,2 ) AS MAX_SIZE
            , ROUND( M.CURRENT_SIZE/1024/1024/1024,2 ) AS CURR_SIZE
            --, ROUND( M.CURRENT_SIZE/1024/1024/1024,2 ) AS USED_SIZE
            , ( 
            SELECT ROUND(SUM(C.FIXED_ALLOC_MEM+C.VAR_ALLOC_MEM)/1024/1024/1024,2)
              FROM SYSTEM_.SYS_TABLES_ A
                 , V$MEMTBL_INFO C
             WHERE A.TABLE_OID = C.TABLE_OID
               AND A.TBS_ID IN (SELECT ID FROM V$TABLESPACES WHERE NAME LIKE '%VOL%')
               AND A.TABLE_TYPE='T' 
            ) AS USED_SIZE
         FROM V$TABLESPACES T
            , X$VOL_TABLESPACE_DESC M
        WHERE T.TYPE IN (0 ,1 ,2 ,8)
          AND T.ID = M.SPACE_ID
UNION ALL
       SELECT T.ID
            , T.NAME
            , ROUND( D.MAX_SIZE * T.PAGE_SIZE/1024/1024/1024, 2) AS MAX_SIZE
            , ROUND( T.TOTAL_PAGE_COUNT * T.PAGE_SIZE/1024/1024/1024, 2) AS CURR_SIZE
            , ROUND( T.ALLOCATED_PAGE_COUNT * T.PAGE_SIZE/1024/1024/1024, 2 ) AS USED_SIZE
         FROM ( SELECT SPACEID, SUM(decode(MAXSIZE,0,CURRSIZE,MAXSIZE)) AS MAX_SIZE
                  FROM V$DATAFILES
                 GROUP BY SPACEID 
              ) D         
            , V$TABLESPACES T
        WHERE T.ID = D.SPACEID
     )
)
UNION ALL
SELECT * FROM (
SELECT NAME     
     , MAX_SIZE as MAX_SZ     
     , CURR_SIZE CURR     
     , USED_SIZE USED

     --, (MAX_SIZE - USED_SIZE) AS FREE
     , (CURR_SIZE - USED_SIZE) AS FREE

     --, USAGE AS 'USAGE(%)'
     --, DECODE( MAX_SIZE, -1, -1, ROUND( USED_SIZE / MAX_SIZE * 100, 2 ) ) AS USAGE
     --, DECODE( MAX_SIZE, -1, ROUND( USED_SIZE / CURR_SIZE * 100, 2 ), ROUND( USED_SIZE / MAX_SIZE * 100, 2 ) ) AS USAGE
     , DECODE( MAX_SIZE, '-1', TO_CHAR( ROUND( USED_SIZE / CURR_SIZE * 100, 2 ), '90.99'), TO_CHAR( ROUND( USED_SIZE / MAX_SIZE * 100, 2 ), '90.99') ) AS USAGE
FROM ( 
--UNION ALL
       SELECT T.ID
            , T.NAME
            --, DECODE( M.MAXSIZE, 140737488322560, (SELECT MEM_MAX_DB_SIZE/1024/1024/1024 FROM V$DATABASE ) , ROUND( M.MAXSIZE/1024/1024/1024, 2 ) ) AS MAX_SIZE
            , DECODE( M.MAXSIZE, 140737488322560, -1 , ROUND( M.MAXSIZE/1024/1024/1024, 2 ) ) AS MAX_SIZE
            , ROUND( M.CURRENT_SIZE/1024/1024/1024, 2 ) AS CURR_SIZE
            , ROUND( ( M.ALLOC_PAGE_COUNT - M.FREE_PAGE_COUNT ) * T.PAGE_SIZE/1024/1024/1024,2 ) AS USED_SIZE
         FROM V$TABLESPACES T
            , V$MEM_TABLESPACES M
        WHERE 1=1
          AND T.ID = M.SPACE_ID
UNION ALL
       SELECT -1
            , 'MEM_MAX_DB_SIZE' NAME
            , (SELECT MEM_MAX_DB_SIZE/1024/1024/1024 FROM V$DATABASE )
            , ROUND( SUM( M.CURRENT_SIZE )/1024/1024/1024, 2 ) AS CURR_SIZE
            --, ROUND( SUM( ( M.ALLOC_PAGE_COUNT - M.FREE_PAGE_COUNT ) * T.PAGE_SIZE )/1024/1024/1024,2 ) AS USED_SIZE
            , ROUND( SUM( M.CURRENT_SIZE )/1024/1024/1024, 2 ) AS USED_SIZE
         FROM V$TABLESPACES T
            , V$MEM_TABLESPACES M
        WHERE 1=1
          AND T.ID = M.SPACE_ID
     )
)
)
 WHERE 1 = 1
   --AND ROUND( USED_SIZE / MAX_SIZE * 100, 2 ) > 90
   --AND NAME LIKE 'TS_%'
   --AND USAGE > 80
 ORDER BY NAME
 --ORDER BY ROUND( USED_SIZE / MAX_SIZE * 100, 2 ) DESC
;

quit
