WITH WX_SQLAREA AS
(
SELECT 
       SA.LAST_LOAD_TIME, SA.LAST_ACTIVE_TIME
     , ROUND( ( SYSDATE - SB.DT ) * 24 * 60 * 60, 0 ) AS INTVL
     , RPAD( SA.MODULE, 20 ) MODULE
     , SA.SQL_ID
     , ( SA.EXECUTIONS - NVL(SB.EXECUTIONS, 0) ) AS EXECUTIONS
     , ( SA.BUFFER_GETS - NVL(SB.BUFFER_GETS, 0) ) AS BUFFER_GETS
     , ( SA.ELAPSED_TIME - NVL(SB.ELAPSED_TIME, 0) ) AS ELAPSED_TIME
     , ( SA.DISK_READS - NVL(SB.DISK_READS, 0) ) AS DISK_READS
     , ( SA.CPU_TIME - NVL(SB.CPU_TIME, 0) ) AS CPU_TIME
     , ( SA.ROWS_PROCESSED - NVL(SB.ROWS_PROCESSED, 0) ) AS ROWS_PROCESSED
     , ( SA.PARSE_CALLS - NVL(SB.PARSE_CALLS, 0) ) AS PARSE_CALLS
     , ( SA.USERS_EXECUTING - NVL(SB.USERS_EXECUTING, 0) ) AS USERS_EXECUTING
     , ( SA.SORTS - NVL(SB.SORTS, 0) ) AS SORTS
     , ( SA.INVALIDATIONS - NVL(SB.INVALIDATIONS, 0) ) AS INVALIDATIONS
     , ( SA.OPTIMIZER_COST - NVL(SB.OPTIMIZER_COST, 0) ) AS OPTIMIZER_COST
     --, ( SA.xx - NVL(SB.xx, 0) ) AS xx
     , SA.SHARABLE_MEM
     , SA.PERSISTENT_MEM
     , SA.RUNTIME_MEM
     , SA.LOADED_VERSIONS
     , SA.OPEN_VERSIONS
     , SA.USERS_OPENING
     , SA.LOADS
     , SA.FIRST_LOAD_TIME
     , SA.COMMAND_TYPE
     , SA.OPTIMIZER_MODE
     , SA.PARSING_USER_ID
     , SA.SQL_FULLTEXT
  FROM V$SQLAREA SA
       LEFT OUTER JOIN MON_IMSI.OKT_SQLAREA SB ON SA.SQL_ID = SB.SQL_ID
 WHERE 1=1
   --AND ROWNUM <= 1000
)
SELECT DT, FIRST_LOAD_TIME,
       LAST_LOAD_TIME, LAST_ACTIVE_TIME
     , INTVL
     , USERNAME
     , MODULE
     , SQL_ID
     , RN
     , RANK_CPU
     , RANK_IO
     , BUFGETSPEREXEC
     , EXECUTIONS
, "ETIME_SUM"
, "CPU_TIME_SUM"
, "ETIME"
, "CPU_TIME"
, "ROWS"
, "GETS"
     , LEN
     , SQL_FULLTEXT
     , PARSE_CALLS
     , DISK_READS
     , BUFFER_GETS
     , ROWS_PROCESSED
     , SHARABLE_MEM
     , PERSISTENT_MEM
     , RUNTIME_MEM
     , SORTS
  FROM (
SELECT SYSDATE AS DT,
       SA.LAST_LOAD_TIME, SA.LAST_ACTIVE_TIME
     , SA.INTVL
     , U.USERNAME
     , RPAD( SA.MODULE, 20 ) MODULE
     , SA.SQL_ID
     , ROW_NUMBER() OVER ( ORDER BY ROUND(DECODE(SA.EXECUTIONS,NULL,0,0,0,(NVL(SA.BUFFER_GETS,0)/SA.EXECUTIONS)),1) desc ) AS RN
     , RANK() OVER ( ORDER BY SA.ELAPSED_TIME DESC ) RANK_CPU
     , RANK() OVER ( ORDER BY SA.DISK_READS DESC ) RANK_IO
     , ROUND(DECODE(SA.EXECUTIONS,NULL,0,0,0,(NVL(SA.BUFFER_GETS,0)/SA.EXECUTIONS)),1) BUFGETSPEREXEC
     , SA.EXECUTIONS
         , ROUND(SA.ELAPSED_TIME/1000000,3)                             ETIME_SUM   -- "ELAPSED_TIME(S)"
         , ROUND(SA.ELAPSED_TIME/EXECUTIONS/1000000,3)                  ETIME       -- "ELAP/EXEC(S)"
         , ROUND(SA.CPU_TIME/1000000,3)                                 CPU_TIME_SUM
         , ROUND(SA.CPU_TIME/EXECUTIONS/1000000,3)                      CPU_TIME
         , ROUND(SA.ROWS_PROCESSED/SA.EXECUTIONS,0)                     "ROWS"
         , ROUND(SA.BUFFER_GETS/SA.EXECUTIONS,1)                        GETS        -- "GETS/EXEC"
     , SA.PARSE_CALLS
     , SA.DISK_READS
     , SA.BUFFER_GETS
     , SA.ROWS_PROCESSED
     , SA.SHARABLE_MEM
     , SA.PERSISTENT_MEM
     , SA.RUNTIME_MEM
     , SA.USERS_EXECUTING
     , SA.SORTS
     , SA.LOADED_VERSIONS
     , SA.OPEN_VERSIONS
     , SA.USERS_OPENING
     , SA.LOADS
     , SA.FIRST_LOAD_TIME
     , SA.INVALIDATIONS
     , SA.COMMAND_TYPE
     , SA.OPTIMIZER_MODE
     , SA.OPTIMIZER_COST
     , SA.PARSING_USER_ID
     , LENGTH( SA.SQL_FULLTEXT ) LEN
     , SA.SQL_FULLTEXT
  FROM 
       DBA_USERS U
     --, V$SQLAREA SA
     , WX_SQLAREA SA
 WHERE 1=1
   --AND DECODE(SA.EXECUTIONS,NULL,0,0,0,(NVL(SA.BUFFER_GETS,0)/SA.EXECUTIONS)) > 10000
   AND SA.PARSING_USER_ID > 5
   AND SA.EXECUTIONS > 10
   AND SA.PARSING_USER_ID = U.USER_ID
   --AND ROWNUM = 0
 --ORDER BY BUFGETSPEREXEC DESC
 ORDER BY RANK_CPU  
       )
 WHERE 1=1 
   --AND USERNAME IN ( 'xx' )
   --AND ROWNUM <= 100
;


