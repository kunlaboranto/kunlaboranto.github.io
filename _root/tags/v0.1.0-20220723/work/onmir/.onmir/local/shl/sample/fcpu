#!/bin/bash

job=$1

ix=0
#for pid in `ps -ef |grep "Test.*Server" |grep -v grep |grep -v gdb |awk '{print $2}'`
for pid in `ps -ef |grep "sleep" |grep -v grep |grep -v gdb |awk '{print $2}'`
do
    ix=`expr $ix + 1`
    find=0
    printf "%4d] pid=%d\n" $ix $pid
    if [ $pid == "self" ]
    then
        continue;
    fi  

    # 결과 유형 (아래 3가지)
    #   0
    #   1,3,5
    #   1-5
    for cpu_res in `grep "^Cpus_allowed_list:" /proc/${pid}/task/*/status |awk '{print $2}'`
	do
		test "x"$? != "x0" && break;
		# $job이 널인경우 항상 chk=1 이어서 모든 mfwServer 프로세스가 검색이 된다.
		chk=`echo $cpu_res |grep "\b$job\b" |wc -l`
		#echo "cpu_res=[$cpu_res] job=$job"
		if [ $chk -gt 0 ]
		then
			find=1
			break;
		else
			sIdx=`echo $cpu_res |sed -e "s/,.*$//g" |cut -d'-' -f1`
			eIdx=`echo $cpu_res |sed -e "s/,.*$//g" |cut -d'-' -f2`
			#echo "cpu_res=[$cpu_res], job=$job, sIdx=$sIdx, eIdx=$eIdx"
			if [ $job -ge $sIdx -a $job -le $eIdx ]
			then
				find=1
				break;
			fi
		fi
	done

    if [ $find -eq 1 ]
    then
        ps -p $pid -opid,tid,psr,pcpu,ni,pri,time,stat,cmd
        ps -L -p $pid -opid,tid,psr,pcpu,ni,pri,time,stat,wchan |grep -v PID
    fi
done

